{"version":3,"file":"index.modern.js","sources":["../src/index.ts"],"sourcesContent":["if (typeof Promise.withResolvers === \"undefined\") {\r\n    Promise.withResolvers = <T>() => {\r\n        let resolve!: (value: T | PromiseLike<T>) => void;\r\n        let reject!: (reason?: unknown) => void;\r\n        const promise = new Promise<T>((res, rej) => {\r\n            resolve = res;\r\n            reject = rej;\r\n        });\r\n        return { promise, resolve, reject };\r\n    };\r\n}\r\n\r\nexport class Channel<T = any, TReturn = any> {\r\n    #items: Set<Array<PromiseWithResolvers<IteratorResult<T>>>> = new Set<Array<PromiseWithResolvers<IteratorResult<T>>>>();\r\n\r\n    send(data: T) {\r\n        for (const items of this.#items) {\r\n            items.push(Promise.withResolvers<IteratorResult<T>>());\r\n            items[items.length - 2].resolve({ done: false, value: data });\r\n        }\r\n    }\r\n\r\n    close() {\r\n        for (const items of this.#items) {\r\n            items[items.length - 1].resolve({ done: true, value: undefined });\r\n            this.#items.delete(items);\r\n        }\r\n    }\r\n\r\n    [Symbol.asyncIterator]() {\r\n        let items: Array<PromiseWithResolvers<any>> = new Array<PromiseWithResolvers<any>>(Promise.withResolvers<IteratorResult<T>>());\r\n        let channel = this;\r\n        channel.#items.add(items);\r\n\r\n        return {\r\n            async next(): Promise<IteratorResult<T>> {\r\n                if (items.length > 1) items.shift();\r\n                return items[0].promise;\r\n            },\r\n            return(value?: TReturn): Promise<IteratorReturnResult<TReturn>> {\r\n                channel.#items.delete(items);\r\n                return Promise.resolve({ done: true, value: value });\r\n            }\r\n        };\r\n    }\r\n}"],"names":["Promise","withResolvers","resolve","reject","promise","res","rej","_items","_classPrivateFieldLooseKey","Channel","constructor","Object","defineProperty","this","writable","value","Set","send","data","items","_classPrivateFieldLooseBase","push","length","done","close","undefined","delete","Symbol","asyncIterator","Array","channel","add","async","next","shift","return"],"mappings":"uLAAqC,IAA1BA,QAAQC,gBACfD,QAAQC,cAAgB,KACpB,IAAIC,EACAC,EAKJ,MAAO,CAAEC,QAJO,IAAIJ,QAAW,CAACK,EAAKC,KACjCJ,EAAUG,EACVF,EAASG,CAAAA,GAEKJ,UAASC,YAElC,IAAAI,eAAAC,EAED,SAAa,MAAAC,EAAOC,WAAAA,GAAAC,OAAAC,eAAAC,KAAAN,EAAA,CAAAO,UAAA,EAAAC,MAC8C,IAAIC,KAElEC,CAAAA,IAAAA,CAAKC,GACD,IAAK,MAAMC,KAAKC,EAAIP,KAAIN,GAAAA,GACpBY,EAAME,KAAKrB,QAAQC,iBACnBkB,EAAMA,EAAMG,OAAS,GAAGpB,QAAQ,CAAEqB,MAAM,EAAOR,MAAOG,GAE9D,CAEAM,KAAAA,GACI,IAAK,MAAML,KAAKC,EAAIP,KAAIN,GAAAA,GACpBY,EAAMA,EAAMG,OAAS,GAAGpB,QAAQ,CAAEqB,MAAM,EAAMR,WAAOU,IACrDL,OAAIb,GAAAA,GAAQmB,OAAOP,EAE3B,CAEA,CAACQ,OAAOC,iBACJ,IAAIT,EAA0C,IAAIU,MAAiC7B,QAAQC,iBACvF6B,EAAUjB,KAGd,OAFAO,EAAAU,EAAOvB,GAAAA,GAAQwB,IAAIZ,GAEZ,CACHa,KAAUC,UACFd,EAAMG,OAAS,GAAGH,EAAMe,QACrBf,EAAM,GAAGf,SAEpB+B,OAAOpB,IACHK,EAAAU,EAAOvB,GAAAA,GAAQmB,OAAOP,GACfnB,QAAQE,QAAQ,CAAEqB,MAAM,EAAMR,MAAOA,KAGxD"}